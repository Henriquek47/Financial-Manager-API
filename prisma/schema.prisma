// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  wallet        Wallet         @relation(fields: [wallet_id], references: [id])
  wallet_id     String         @unique
  user_category UserCategory[] @relation("user")
  transaction   Transaction[]  @relation("user")
  receivedTransactions Transaction[] @relation("receiver")
 
  @@map("user")
}

model Wallet {
  id    String  @id @default(uuid())
  value Decimal
  user  User?   @relation

  @@map("wallet")
}

model Category {
  id            String         @id @default(uuid())
  name          String         @unique
  cor           String         @unique
  image         String?
  is_public     Boolean        @default(false)
  user_category UserCategory[] @relation("category")
  Transaction   Transaction[]  @relation("category")

  @@map("category")
}

model UserCategory {
  user        User     @relation("user", fields: [user_id], references: [id])
  user_id     String
  category    Category @relation("category", fields: [category_id], references: [id])
  category_id String

  @@id([user_id, category_id])
  @@map("user_category")
}

model Transaction {
  id          String   @id @default(uuid())
  value       Decimal
  description String?
  user        User     @relation("user", fields: [user_id], references: [id])
  user_id     String
  receiver    User?     @relation("receiver", fields: [receiver_id], references: [id])
  receiver_id String?
  category    Category? @relation("category", fields: [category_id], references: [id])
  category_id String?
  createdAt   DateTime @default(now())

  @@map("transaction")
}
